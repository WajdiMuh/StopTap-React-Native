diff --git a/node_modules/@bayramitto/react-native-colorpicker/dist/ColorPicker.js b/node_modules/@bayramitto/react-native-colorpicker/dist/ColorPicker.js
index e73781d..36ee599 100644
--- a/node_modules/@bayramitto/react-native-colorpicker/dist/ColorPicker.js
+++ b/node_modules/@bayramitto/react-native-colorpicker/dist/ColorPicker.js
@@ -46,10 +46,13 @@ const ColorPicker = ({ colors, styles, onColorChanging, onColorChanged, cicrleSi
     const tapGestureEvent = useAnimatedGestureHandler({
         onStart: event => {
             translateY.value = withTiming(-(styles.height / 2) - PICKER_SIZE);
-            translateX.value = withTiming(event.x);
+            translateX.value = withTiming(event.x, {}, (finished) => {
+                if (finished) {
+                    onEnd();
+                }
+            });
             active.value = withTiming(1);
         },
-        onEnd,
     });
     const rStyle = useAnimatedStyle(() => {
         return {
@@ -110,12 +113,13 @@ const ColorPicker = ({ colors, styles, onColorChanging, onColorChanged, cicrleSi
             borderTopColor: '#FFF',
         },
     });
+    const locations = colorPalette.map((_, index) => ((index + 1) / colorPalette.length));
     return (React.createElement(GestureHandlerRootView, null,
         React.createElement(TapGestureHandler, { onGestureEvent: tapGestureEvent },
             React.createElement(Animated.View, null,
                 React.createElement(PanGestureHandler, { onGestureEvent: panGestureEevent, minDist: 0 },
                     React.createElement(Animated.View, { style: { justifyContent: 'center' } },
-                        React.createElement(LinearGradient, { colors: colorPalette, start: { x: 0, y: 0 }, end: { x: 1, y: 0 }, style: styles }),
+                        React.createElement(LinearGradient, { colors: colorPalette, start: { x: 0, y: 0 }, end: { x: 1, y: 0 }, locations:locations, style: styles }),
                         React.createElement(Animated.View, { style: [compStyles.picker, rStyle] },
                             React.createElement(Animated.View, { style: [compStyles.internalPicker, rInternal] }),
                             React.createElement(Animated.View, { style: [compStyles.arrow, arrowStyle] }))))))));
